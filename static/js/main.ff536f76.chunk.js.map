{"version":3,"sources":["To-do-App/ListItem.js","To-do-App/ToDo.js","App.js","serviceWorker.js","index.js"],"names":["ListItem","props","listItems","items","map","item","className","key","type","id","value","text","onChange","e","setUpdate","target","onClick","deleteItem","duration","easing","ToDo","state","currentItem","handleInput","bind","addItem","this","setState","Date","now","preventDefault","newItem","newItems","filteredItem","filter","onSubmit","placeholder","Component","App","Boolean","window","location","hostname","match","ReactDOM","render","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister","catch","error","console","message"],"mappings":"8SAoCeA,MAhCf,SAAkBC,GAChB,IACMC,EADQD,EAAME,MACIC,KAAI,SAAAC,GAC1B,OACE,yBAAKC,UAAU,OAAOC,IAAKF,EAAKE,KAC9B,2BAEE,2BACEC,KAAK,OACLC,GAAIJ,EAAKE,IACTG,MAAOL,EAAKM,KACZC,SAAU,SAAAC,GACRZ,EAAMa,UAAUD,EAAEE,OAAOL,MAAOL,EAAKE,QAGzC,8BACG,IACD,kBAAC,IAAD,CAASS,QAAS,kBAAMf,EAAMgB,WAAWZ,EAAKE,cAMxD,OACE,6BACE,kBAAC,IAAD,CAAUW,SAAU,IAAKC,OAAO,eAC7BjB,KCqDMkB,EAhFf,YACE,WAAYnB,GAAQ,IAAD,8BACjB,4CAAMA,KACDoB,MAAQ,CACXlB,MAAO,GACPmB,YAAa,CACXX,KAAM,GACNJ,IAAK,KAGT,EAAKgB,YAAc,EAAKA,YAAYC,KAAjB,gBACnB,EAAKC,QAAU,EAAKA,QAAQD,KAAb,gBACf,EAAKP,WAAa,EAAKA,WAAWO,KAAhB,gBAClB,EAAKV,UAAY,EAAKA,UAAUU,KAAf,gBAZA,EADrB,yEAecX,GACVa,KAAKC,SAAS,CACZL,YAAa,CACXX,KAAME,EAAEE,OAAOL,MACfH,IAAKqB,KAAKC,WAnBlB,8BAuBUhB,GACNA,EAAEiB,iBACF,IAAMC,EAAUL,KAAKL,MAAMC,YAC3B,GAAqB,KAAjBS,EAAQpB,KAAa,CACvB,IAAMqB,EAAQ,sBAAON,KAAKL,MAAMlB,OAAlB,CAAyB4B,IACvCL,KAAKC,SAAS,CACZxB,MAAO6B,EACPV,YAAa,CACXX,KAAM,GACNJ,IAAK,SAhCf,iCAqCaA,GACT,IAAM0B,EAAeP,KAAKL,MAAMlB,MAAM+B,QAAO,SAAA7B,GAAI,OAAIA,EAAKE,MAAQA,KAClEmB,KAAKC,SAAS,CACZxB,MAAO8B,MAxCb,gCA4CYtB,EAAMJ,GACd,IAAMJ,EAAQuB,KAAKL,MAAMlB,MACzBA,EAAMC,KAAI,SAAAC,GACJA,EAAKE,MAAQA,IACfF,EAAKM,KAAOA,MAGhBe,KAAKC,SAAS,CACZxB,MAAOA,MApDb,+BAwDI,OACE,yBAAKG,UAAU,OACb,gCACE,0BAAMA,UAAU,YAAY6B,SAAUT,KAAKD,SACzC,2BACEjB,KAAK,OACL4B,YAAY,kBACZ9B,UAAU,QACVI,MAAOgB,KAAKL,MAAMC,YAAYX,KAC9BC,SAAUc,KAAKH,cAEjB,4BAAQf,KAAK,UAAb,SAGJ,kBAAC,EAAD,CACEL,MAAOuB,KAAKL,MAAMlB,MAClBc,WAAYS,KAAKT,WACjBH,UAAWY,KAAKZ,iBAzE1B,GAA0BuB,aCuFXC,MAlEf,WA2DE,OACE,6BACE,kBAAC,EAAD,QCzEcC,QACW,cAA7BC,OAAOC,SAASC,UAEe,UAA7BF,OAAOC,SAASC,UAEhBF,OAAOC,SAASC,SAASC,MACvB,2DCZNC,IAASC,OAAO,kBAAC,EAAD,MAASC,SAASC,eAAe,SD6H3C,kBAAmBC,WACrBA,UAAUC,cAAcC,MACrBC,MAAK,SAAAC,GACJA,EAAaC,gBAEdC,OAAM,SAAAC,GACLC,QAAQD,MAAMA,EAAME,a","file":"static/js/main.ff536f76.chunk.js","sourcesContent":["import React from \"react\";\r\nimport \"./Style.css\";\r\nimport FilpMove from \"react-flip-move\";\r\nimport { FaTrash } from \"react-icons/fa\";\r\nfunction ListItem(props) {\r\n  const items = props.items;\r\n  const listItems = items.map(item => {\r\n    return (\r\n      <div className=\"list\" key={item.key}>\r\n        <p>\r\n          {/* {item.text} */}\r\n          <input\r\n            type=\"text\"\r\n            id={item.key}\r\n            value={item.text}\r\n            onChange={e => {\r\n              props.setUpdate(e.target.value, item.key);\r\n            }}\r\n          />\r\n          <span>\r\n            {\" \"}\r\n            <FaTrash onClick={() => props.deleteItem(item.key)} />\r\n          </span>\r\n        </p>\r\n      </div>\r\n    );\r\n  });\r\n  return (\r\n    <div>\r\n      <FilpMove duration={300} easing=\"ease-in-out\">\r\n        {listItems}\r\n      </FilpMove>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default ListItem;\r\n","import React, { Component } from \"react\";\r\nimport \"./Style.css\";\r\nimport ListItem from \"./ListItem\";\r\nexport class ToDo extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      items: [],\r\n      currentItem: {\r\n        text: \"\",\r\n        key: \"\"\r\n      }\r\n    };\r\n    this.handleInput = this.handleInput.bind(this);\r\n    this.addItem = this.addItem.bind(this);\r\n    this.deleteItem = this.deleteItem.bind(this);\r\n    this.setUpdate = this.setUpdate.bind(this);\r\n  }\r\n  handleInput(e) {\r\n    this.setState({\r\n      currentItem: {\r\n        text: e.target.value,\r\n        key: Date.now()\r\n      }\r\n    });\r\n  }\r\n  addItem(e) {\r\n    e.preventDefault();\r\n    const newItem = this.state.currentItem;\r\n    if (newItem.text !== \"\") {\r\n      const newItems = [...this.state.items, newItem];\r\n      this.setState({\r\n        items: newItems,\r\n        currentItem: {\r\n          text: \"\",\r\n          key: \"\"\r\n        }\r\n      });\r\n    }\r\n  }\r\n  deleteItem(key) {\r\n    const filteredItem = this.state.items.filter(item => item.key !== key);\r\n    this.setState({\r\n      items: filteredItem\r\n    });\r\n  }\r\n\r\n  setUpdate(text, key) {\r\n    const items = this.state.items;\r\n    items.map(item => {\r\n      if (item.key === key) {\r\n        item.text = text;\r\n      }\r\n    });\r\n    this.setState({\r\n      items: items\r\n    });\r\n  }\r\n  render() {\r\n    return (\r\n      <div className=\"App\">\r\n        <header>\r\n          <form className=\"ToDo-form\" onSubmit={this.addItem}>\r\n            <input\r\n              type=\"text\"\r\n              placeholder=\"Plese Enter ...\"\r\n              className=\"input\"\r\n              value={this.state.currentItem.text}\r\n              onChange={this.handleInput}\r\n            />\r\n            <button type=\"submit\">Add</button>\r\n          </form>\r\n        </header>\r\n        <ListItem\r\n          items={this.state.items}\r\n          deleteItem={this.deleteItem}\r\n          setUpdate={this.setUpdate}\r\n        />\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default ToDo;\r\n","import React from \"react\";\n// import {\n//   BrowserRouter as Router,\n//   Switch,\n//   Route,\n//   Link,\n//   useRouteMatch,\n//   useParams\n// } from \"react-router-dom\";\n// import \"./App.css\";\n// import Home from \"./components/Home\";\n// import About from \"./components/About\";\n// import User from \"./components/User\";\n// import Redirect from \"./components/Redirect Link/Redirect\";\n// import CustomLink from \"./components/Custom_link/CustomLink\";\n// import PreventingTransitionsExample from \"./components/PreventingTransition.js/Preventing\";\n// import NoMatch from \"./components/No match(404)/NoMatch\";\n// import SidebarExample from \"./components/Sidebar/Sidebar\";\n// import AnimationExample from \"./components/Animation_Transiton/Animation\";\nimport ToDo from \"./To-do-App/ToDo\";\n// import Nav from \"./routing/Nav\";\n// import About from \"./routing/About\";\n// import Shope from \"./routing/Shope\";\n// import Home from \"./routing/Home\";\nfunction App() {\n  // return (\n  //     <div className=\"App\">\n  //       <Router>\n  //         <div>\n  //           <nav className=\"nav\">\n  //             <h3>logo</h3>\n  //             <ul>\n  //               <li className=\"nav-link\">\n  //                 <Link to=\"/\">Home</Link>\n  //               </li>\n  //               <li className=\"nav-link\">\n  //                 <Link to=\"/about\">About</Link>\n  //               </li>\n  //               <li className=\"nav-link\">\n  //                 <Link to=\"/user\">User</Link>\n  //               </li>\n  //             </ul>\n  //           </nav>\n  //           <Switch>\n  //             <Route path=\"/about\">\n  //               <About />\n  //             </Route>\n  //             <Route path=\"/user\">\n  //               <User />\n  //             </Route>\n  //             <Route path=\"/\">\n  //               <Home />\n  //             </Route>\n  //           </Switch>\n  //         </div>\n  //       </Router>\n\n  //       {/* <Router>\n  //         <Nav />\n  //         <Switch>\n  //           <Route path=\"/\" exact component={Home} />\n  //           <Route path=\"/about\" component={About} />\n  //           <Route path=\"/shope\" component={Shope} />\n  //         </Switch>\n  //       </Router> */}\n  //       <hr />\n  //       <Redirect />\n  //       <br />\n  //       <hr />\n  //       <CustomLink />\n  //       <br />\n  //       <hr />\n  //       <PreventingTransitionsExample />\n  //       <hr />\n  //       <NoMatch />\n  //       <hr />\n  //       <SidebarExample />\n  //       <hr />\n  //       {/* <AnimationExample /> */}\n  //     </div>\n\n  // )\n\n  return (\n    <div>\n      <ToDo />\n    </div>\n  );\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' }\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}